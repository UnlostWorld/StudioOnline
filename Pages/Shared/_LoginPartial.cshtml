@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using StudioOnline.Identity
@using System.Collections

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form action="api/Identity/Disconnect">
            <button type="submit">Logout</button>
        </form>
    </li>
}
else
{
 	<form action="api/Identity/Connect" method="post">
		<div>
			<p>
				@{
					IEnumerable<AuthenticationScheme> schemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
					foreach (AuthenticationScheme authScheme in schemes)
					{
						<button type="submit" name="provider" value="@authScheme.Name" title="Log in using your @authScheme.DisplayName account">@authScheme.DisplayName</button>
					}
				}
				</p>
		</div>
	</form>
}
</ul>
